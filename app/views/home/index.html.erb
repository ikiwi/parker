<div class="app">
	<div id="map"></div>
	<script>
		function initMap() {
			navigator.geolocation.getCurrentPosition(initialize);
		}

		function initialize(location) {
			var mapDiv = document.getElementById('map');
			var spots = []
			var map = new google.maps.Map(mapDiv, {
				center: {lat: location.coords.latitude, lng: location.coords.longitude},
				zoom: 13
			});
			var geocoding  = new google.maps.Geocoder();
			var marker = new google.maps.Marker({
				position: {lat: location.coords.latitude, lng: location.coords.longitude},
				map: map,
				title: 'Your current location',
				label: 'U'
			});

			map.controls[google.maps.ControlPosition.TOP_CENTER].push(
				document.getElementById('info'));

			marker.setMap(map);
			initParking(map)

			google.maps.event.addListener(map, 'click', function(event) {
				addParking(event.latLng.lat(), event.latLng.lng(), map);
			});

			$("#search_button_geocoding").click(function(){
				codeAddress(geocoding, map);
			});
			$("#release_button_geocoding").click(function(){
				releaseSpot();
			});
		}

		function initParking(map) {
		  	$.ajax({
		  		url: '/spots', 
		  		type: 'GET',
		  		data: {
		  			user_id: 1
		  		},
		  		success: function(result) {
		  			console.log(result.spots)
					for (var i=0; i < result.spots.length; i++) {
						addMarker(result.spots[i].latitude, result.spots[i].longitude, map)
					}
		  		}
		  	});
		}

		function addMarker(lat, lng, map) {
			var marker = new google.maps.Marker({
				position: {lat: lat, lng: lng},
				label: "Parking",
				map: map
			});
		}

		function addParking(lat, lng, map) {
			addMarker(lat, lng, map);

		  	$.post("/spots", 
		  	{
		  		spot: {
			  		user_id: 1,
			  		latitude: lat,
			  		longitude: lng
			  	}
		  	},
		  	function(data, status) {
		  		if (status == "success") {
				  console.log(data.total);
				}
				else {
				  console.log(status);
				}
			});
		}

		function codeAddress(geocoding, map) {
			var address = $("#search_box_geocoding").val();
			if(address.length > 0){
				geocoding.geocode({'address': address},function(results, status){
					if(status == google.maps.GeocoderStatus.OK){
						map.setCenter(results[0].geometry.location);
						var marker = new google.maps.Marker({
							map: map,
							position: results[0].geometry.location
						});
					} else {
						alert("Geocode was not successful for the following reason: " + status);
					}
				});
			} else {
				alert("Search field can't be blank");
			}
		}

		function releaseSpot() {
		  	$.ajax({
		  		url: '/spots', 
		  		type: 'DELETE',
		  		data: {
		  			user_id: 1
		  		},
		  		success: function(result) {
		  			console.log(result)
		  		}
		  	});
		  	location.reload();
		}

		function update() {
		  var path = [marker1.getPosition(), marker2.getPosition()];
		  poly.setPath(path);
		  geodesicPoly.setPath(path);
		  var heading = google.maps.geometry.spherical.computeHeading(path[0], path[1]);
		  document.getElementById('heading').value = heading;
		  document.getElementById('origin').value = path[0].toString();
		  document.getElementById('destination').value = path[1].toString();
		}

	</script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaH688VQ5p8O4BlNxGT_40Nj7Uytf_m5o&callback=initMap&libraries=geometry"
	    async defer>


	</script>

	<input id="search_box_geocoding" type="text" size="50" placeholder="Address">
	<button type="submit" id="search_button_geocoding">Search</button>
	<br>
	<button type="submit" id="release_button_geocoding">Release Spot</button>

</div>
